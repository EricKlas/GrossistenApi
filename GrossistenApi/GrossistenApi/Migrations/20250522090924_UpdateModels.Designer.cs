// <auto-generated />
using System;
using GrossistenApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrossistenApi.Migrations
{
    [DbContext(typeof(GrossistenApiDatabaseContext))]
    [Migration("20250522090924_UpdateModels")]
    partial class UpdateModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GrossistenApi.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArticleNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiptId")
                        .HasColumnType("int");

                    b.Property<bool?>("ShowInAvailableToPurchase")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowInStock")
                        .HasColumnType("bit");

                    b.Property<bool?>("ShowOnReceipt")
                        .HasColumnType("bit");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductsTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArticleNumber = "4006381333931",
                            Category = "Clothes",
                            Description = "Classic white T-Shirt",
                            Price = 199.0,
                            Quantity = 150,
                            ShowInAvailableToPurchase = true,
                            ShowInStock = true,
                            ShowOnReceipt = false,
                            Size = "L",
                            Title = "T-Shirt"
                        },
                        new
                        {
                            Id = 2,
                            ArticleNumber = "5012345678900",
                            Category = "Clothes",
                            Description = "Regular fit blue jeans",
                            Price = 499.0,
                            Quantity = 80,
                            ReceiptId = 2,
                            ShowInAvailableToPurchase = true,
                            ShowInStock = true,
                            ShowOnReceipt = true,
                            Size = "M",
                            Title = "Jeans"
                        },
                        new
                        {
                            Id = 3,
                            ArticleNumber = "5023456789012",
                            Category = "Footwear",
                            Description = "Running sneakers",
                            Price = 899.0,
                            Quantity = 60,
                            ShowInAvailableToPurchase = true,
                            ShowInStock = true,
                            ShowOnReceipt = false,
                            Size = "S",
                            Title = "Sneakers"
                        },
                        new
                        {
                            Id = 4,
                            ArticleNumber = "6012345678901",
                            Category = "Clothes",
                            Description = "Grey hoodie",
                            Price = 599.0,
                            Quantity = 40,
                            ReceiptId = 4,
                            ShowInAvailableToPurchase = true,
                            ShowInStock = true,
                            ShowOnReceipt = true,
                            Size = "M",
                            Title = "Hoodie"
                        },
                        new
                        {
                            Id = 5,
                            ArticleNumber = "7012345678902",
                            Category = "Accessories",
                            Description = "Baseball cap",
                            Price = 149.0,
                            Quantity = 200,
                            ShowInAvailableToPurchase = true,
                            ShowInStock = true,
                            ShowOnReceipt = false,
                            Size = "M",
                            Title = "Cap"
                        },
                        new
                        {
                            Id = 6,
                            ArticleNumber = "8001234567890",
                            Category = "Accessories",
                            Description = "Analog watch",
                            Price = 1299.0,
                            Quantity = 30,
                            ReceiptId = 6,
                            ShowInAvailableToPurchase = true,
                            ShowInStock = true,
                            ShowOnReceipt = true,
                            Title = "Watch"
                        },
                        new
                        {
                            Id = 7,
                            ArticleNumber = "9001234567891",
                            Category = "Electronics",
                            Description = "33-Cm ultrabook",
                            Price = 9999.0,
                            Quantity = 0,
                            ShowInAvailableToPurchase = false,
                            ShowInStock = false,
                            ShowOnReceipt = false,
                            Title = "Laptop"
                        },
                        new
                        {
                            Id = 8,
                            ArticleNumber = "3001234567892",
                            Category = "Home",
                            Description = "Ceramic mug 350 ml",
                            Price = 99.0,
                            Quantity = 120,
                            ShowInAvailableToPurchase = true,
                            ShowInStock = true,
                            ShowOnReceipt = false,
                            Title = "Coffee Mug"
                        },
                        new
                        {
                            Id = 9,
                            ArticleNumber = "2001234567893",
                            Category = "Accessories",
                            Description = "Travel backpack 20 L",
                            Price = 799.0,
                            Quantity = 50,
                            ShowInAvailableToPurchase = true,
                            ShowInStock = true,
                            ShowOnReceipt = false,
                            Size = "L",
                            Title = "Backpack"
                        },
                        new
                        {
                            Id = 10,
                            ArticleNumber = "1001234567894",
                            Category = "Accessories",
                            Description = "UV protection",
                            Price = 399.0,
                            Quantity = 75,
                            ShowInAvailableToPurchase = false,
                            ShowInStock = true,
                            ShowOnReceipt = false,
                            Title = "Sunglasses"
                        },
                        new
                        {
                            Id = 11,
                            ArticleNumber = "1101234567895",
                            Category = "Books",
                            Description = "The Great Gatsby",
                            Price = 149.0,
                            Quantity = 100,
                            ReceiptId = 11,
                            ShowInAvailableToPurchase = true,
                            ShowInStock = true,
                            ShowOnReceipt = true,
                            Title = "Book"
                        },
                        new
                        {
                            Id = 12,
                            ArticleNumber = "1201234567896",
                            Category = "Toys",
                            Description = "Wooden chess set",
                            Price = 349.0,
                            Quantity = 20,
                            ShowInAvailableToPurchase = true,
                            ShowInStock = true,
                            ShowOnReceipt = false,
                            Title = "Chess Set"
                        },
                        new
                        {
                            Id = 13,
                            ArticleNumber = "1301234567897",
                            Category = "Toys",
                            Description = "Superhero figurine",
                            Price = 249.0,
                            Quantity = 60,
                            ShowInAvailableToPurchase = true,
                            ShowInStock = true,
                            ShowOnReceipt = false,
                            Title = "Action Figure"
                        },
                        new
                        {
                            Id = 14,
                            ArticleNumber = "1401234567898",
                            Category = "Home",
                            Description = "24-piece stainless set",
                            Price = 599.0,
                            Quantity = 80,
                            ShowInAvailableToPurchase = true,
                            ShowInStock = true,
                            ShowOnReceipt = false,
                            Title = "Cutlery Set"
                        },
                        new
                        {
                            Id = 15,
                            ArticleNumber = "1501234567899",
                            Category = "Home",
                            Description = "LED desk lamp",
                            Price = 349.0,
                            Quantity = 35,
                            ReceiptId = 15,
                            ShowInAvailableToPurchase = true,
                            ShowInStock = true,
                            ShowOnReceipt = true,
                            Title = "Desk Lamp"
                        },
                        new
                        {
                            Id = 16,
                            ArticleNumber = "1601234567800",
                            Category = "Beauty",
                            Description = "Floral scent 50 ml",
                            Price = 799.0,
                            Quantity = 0,
                            ShowInAvailableToPurchase = true,
                            ShowInStock = false,
                            ShowOnReceipt = false,
                            Title = "Perfume"
                        },
                        new
                        {
                            Id = 17,
                            ArticleNumber = "1701234567801",
                            Category = "Electronics",
                            Description = "Wireless over-ear",
                            Price = 1299.0,
                            Quantity = 45,
                            ShowInAvailableToPurchase = true,
                            ShowInStock = true,
                            ShowOnReceipt = false,
                            Title = "Headphones"
                        },
                        new
                        {
                            Id = 18,
                            ArticleNumber = "1801234567802",
                            Category = "Sports",
                            Description = "Non-slip 6 mm",
                            Price = 299.0,
                            Quantity = 0,
                            ReceiptId = 18,
                            ShowInAvailableToPurchase = true,
                            ShowInStock = false,
                            ShowOnReceipt = true,
                            Title = "Yoga Mat"
                        },
                        new
                        {
                            Id = 19,
                            ArticleNumber = "1901234567803",
                            Category = "Outdoor",
                            Description = "2-person hiking tent",
                            Price = 1599.0,
                            Quantity = 15,
                            ShowInAvailableToPurchase = false,
                            ShowInStock = true,
                            ShowOnReceipt = false,
                            Title = "Tent"
                        },
                        new
                        {
                            Id = 20,
                            ArticleNumber = "2101234567804",
                            Category = "Pet",
                            Description = "Durable chew toy",
                            Price = 129.0,
                            Quantity = 90,
                            ShowInAvailableToPurchase = true,
                            ShowInStock = true,
                            ShowOnReceipt = false,
                            Title = "Dog Toy"
                        });
                });

            modelBuilder.Entity("GrossistenApi.Models.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Incoming")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IncomingReceipt")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Outgoing")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("OutgoingReceipt")
                        .HasColumnType("bit");

                    b.Property<string>("PersonName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReceiptProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ReceiptsTable");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Incoming = new DateTime(2025, 5, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            IncomingReceipt = true,
                            OutgoingReceipt = false,
                            PersonName = "Peter Nilsson",
                            ReceiptProductId = 3
                        },
                        new
                        {
                            Id = 2,
                            Incoming = new DateTime(2025, 5, 3, 0, 0, 0, 0, DateTimeKind.Local),
                            IncomingReceipt = true,
                            OutgoingReceipt = false,
                            PersonName = "Maria Andersson",
                            ReceiptProductId = 2
                        },
                        new
                        {
                            Id = 3,
                            Incoming = new DateTime(2025, 5, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            IncomingReceipt = true,
                            OutgoingReceipt = false,
                            PersonName = "Johan Karlsson",
                            ReceiptProductId = 7
                        },
                        new
                        {
                            Id = 4,
                            Incoming = new DateTime(2025, 4, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            IncomingReceipt = true,
                            OutgoingReceipt = false,
                            PersonName = "Elin Larsson",
                            ReceiptProductId = 10
                        },
                        new
                        {
                            Id = 5,
                            Incoming = new DateTime(2025, 3, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            IncomingReceipt = true,
                            OutgoingReceipt = false,
                            PersonName = "Lars Gustafsson",
                            ReceiptProductId = 17
                        },
                        new
                        {
                            Id = 9,
                            Incoming = new DateTime(2025, 2, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            IncomingReceipt = true,
                            OutgoingReceipt = false,
                            PersonName = "Fredrik Öberg",
                            ReceiptProductId = 5
                        },
                        new
                        {
                            Id = 10,
                            Incoming = new DateTime(2025, 3, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            IncomingReceipt = true,
                            OutgoingReceipt = false,
                            PersonName = "Maria Johansson",
                            ReceiptProductId = 12
                        },
                        new
                        {
                            Id = 6,
                            IncomingReceipt = false,
                            Outgoing = new DateTime(2025, 5, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            OutgoingReceipt = true,
                            PersonName = "Anna Sjöberg",
                            ReceiptProductId = 1
                        },
                        new
                        {
                            Id = 7,
                            IncomingReceipt = false,
                            Outgoing = new DateTime(2025, 4, 2, 0, 0, 0, 0, DateTimeKind.Local),
                            OutgoingReceipt = true,
                            PersonName = "Oskar Lindqvist",
                            ReceiptProductId = 13
                        },
                        new
                        {
                            Id = 8,
                            IncomingReceipt = false,
                            Outgoing = new DateTime(2025, 5, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            OutgoingReceipt = true,
                            PersonName = "Sara Ek",
                            ReceiptProductId = 20
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
